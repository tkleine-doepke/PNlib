// name: PNlib.PN.Examples.ExtTest.IAwithPDtoTD2
// keywords: PNlib, continuous
// status: correct

loadFile("../../PNlib/package.mo"); getErrorString();
simulate(PNlib.PN.Examples.ExtTest.IAwithPDtoTD2); getErrorString();

vars := {
  "P1.t",
  "P2.t",
  "P3.t",
  "T1.active",
  "T2.active"
};

(success, failVars) := OpenModelica.Scripting.diffSimulationResults("PNlib.PN.Examples.ExtTest.IAwithPDtoTD2_res.mat",
  "../../ReferenceFiles/PNlib.PN.Examples.ExtTest.IAwithPDtoTD2.mat",
  "PNlib.PN.Examples.ExtTest.IAwithPDtoTD2_diff", vars=vars); getErrorString();

if success then
  print("Files Equal!");
else
  filterSimulationResults("PNlib.PN.Examples.ExtTest.IAwithPDtoTD2_res.mat", "../../ReferenceFiles/PNlib.PN.Examples.ExtTest.IAwithPDtoTD2_minimal.mat", vars, 0); getErrorString();
end if;

// Result:
// true
// "Notification: Automatically loaded package Modelica 3.2.2 due to uses annotation.
// Notification: Automatically loaded package Complex 3.2.2 due to uses annotation.
// Notification: Automatically loaded package ModelicaServices 3.2.2 due to uses annotation.
// "
// record SimulationResult
//     resultFile = "PNlib.PN.Examples.ExtTest.IAwithPDtoTD2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 10.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'PNlib.PN.Examples.ExtTest.IAwithPDtoTD2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
// messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// {"P1.t","P2.t","P3.t","T1.active","T2.active"}
//
// ""
// Files Equal!
// endResult
