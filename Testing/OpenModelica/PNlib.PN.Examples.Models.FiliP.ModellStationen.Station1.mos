// name: PNlib.PN.Examples.Models.FiliP.ModellStationen.Station1
// keywords: PNlib, colored places
// status: correct

loadFile("../../PNlib/package.mo"); getErrorString();
simulate(PNlib.PN.Examples.Models.FiliP.ModellStationen.Station1); getErrorString();

vars := {
  "pflegekraft.HatFruehDienst",
  "pflegekraft.HatSpaetDienst",
  "pflegekraft.HatNachtDienst",
  "pflegekraft.IstKrank",
  "pflegekraft.HatUrlaubt",
  "pflegekraft.HatWochenende",
  "pflegekraft.HatRuhezeit",
  "pflegekraft.Dienstfaehig",
  "pflegekraft.ArbeitszeitKontingentPlanungsPeriode",
  "pflegekraft.GeleisteteArbeistzeitGesammt",
  "station.BesetzungFruehDienst",
  "station.BesetzungSpaetDienst",
  "station.BesetzungNachtDienst",
  "station.BesetzungsDefizitFrueh",
  "station.BesetzungsDefizitSpaet",
  "station.BesetzungsDefizitNacht"
};

(success, failVars) := OpenModelica.Scripting.diffSimulationResults("PNlib.PN.Examples.Models.FiliP.ModellStationen.Station1_res.mat",
  "../../ReferenceFiles/PNlib.PN.Examples.Models.FiliP.ModellStationen.Station1.mat",
  "PNlib.PN.Examples.Models.FiliP.ModellStationen.Station1_diff", vars=vars); getErrorString();

if success then
  print("Files Equal!");
else
  filterSimulationResults("PNlib.PN.Examples.Models.FiliP.ModellStationen.Station1_res.mat", "../../ReferenceFiles/PNlib.PN.Examples.Models.FiliP.ModellStationen.Station1_minimal.mat", vars, 0); getErrorString();
end if;

// Result:
// true
// "Notification: Automatically loaded package Modelica 3.2.2 due to uses annotation.
// Notification: Automatically loaded package Complex 3.2.2 due to uses annotation.
// Notification: Automatically loaded package ModelicaServices 3.2.2 due to uses annotation.
// "
// record SimulationResult
//     resultFile = "PNlib.PN.Examples.Models.FiliP.ModellStationen.Station1_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 365.0, numberOfIntervals = 500, tolerance = 1e-006, method = 'dassl', fileNamePrefix = 'PNlib.PN.Examples.Models.FiliP.ModellStationen.Station1', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
// messages = "LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// LOG_SUCCESS | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// {"pflegekraft.HatFruehDienst","pflegekraft.HatSpaetDienst","pflegekraft.HatNachtDienst","pflegekraft.IstKrank","pflegekraft.HatUrlaubt","pflegekraft.HatWochenende","pflegekraft.HatRuhezeit","pflegekraft.Dienstfaehig","pflegekraft.ArbeitszeitKontingentPlanungsPeriode","pflegekraft.GeleisteteArbeistzeitGesammt","station.BesetzungFruehDienst","station.BesetzungSpaetDienst","station.BesetzungNachtDienst","station.BesetzungsDefizitFrueh","station.BesetzungsDefizitSpaet","station.BesetzungsDefizitNacht"}
//
// ""
// Files Equal!
// endResult
